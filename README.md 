# Time Greeting Block

Transform your WordPress site with greetings that adapt to the time of day. Visitors see 'Good morning!' at sunrise and 'Good evening!' at dusk automatically.

[![WordPress Plugin Version](https://img.shields.io/badge/wordpress-6.0%2B-blue.svg)](https://wordpress.org/)
[![PHP Version](https://img.shields.io/badge/php-7.4%2B-purple.svg)](https://php.net/)
[![License](https://img.shields.io/badge/license-GPL--2.0%2B-red.svg)](https://www.gnu.org/licenses/gpl-2.0.html)

## Features

- **Dynamic Time-Based Greetings**: Automatically displays different messages based on the current time
- **Gutenberg Block**: Modern WordPress block with live preview and intuitive controls
- **Shortcode Support**: Use `[time_greeting]` anywhere on your site
- **Page Builder Compatible**: Works with Bricks Builder and other page builders
- **Timezone Aware**: Supports multiple timezones and displays appropriate abbreviations
- **Date Display**: Show current date alongside greetings in various formats
- **Fully Customizable**: CSS variables make styling adjustments simple
- **Accessibility Ready**: Semantic HTML with proper `<time>` elements
- **Clean Uninstall**: Removes all data when deactivated (good citizen plugin)
- **No Build Tools**: Ready to use - no npm or compilation required

## Installation

### From WordPress Admin
1. Navigate to **Plugins > Add New**
2. Search for "Time Greeting Block"
3. Install and activate the plugin

### Manual Installation
1. Download the plugin files
2. Upload the `time-greeting-block` folder to `/wp-content/plugins/`
3. Activate the plugin through the WordPress admin

### GitHub Installation
```bash
cd wp-content/plugins
git clone https://github.com/your-username/time-greeting-block.git
```

## Usage

### Gutenberg Block

Add the Time Greeting block through the WordPress block editor:

1. Click the **+** button to add a block
2. Search for "Time Greeting" or find it in the **Widgets** category
3. Configure settings in the sidebar panel

**Block Options:**
- **Display Type**: Choose greeting, date, or both
- **Date Format**: Select preset formats or use custom PHP date format
- **Timezone**: Set specific timezone or use site default
- **Text Alignment**: Left, center, or right alignment

### Shortcode

Use the shortcode anywhere shortcodes are supported:

```php
// Basic greeting
[time_greeting]

// Date only
[time_greeting display="date"]

// Both greeting and date
[time_greeting display="both"]

// Custom timezone
[time_greeting timezone="America/Chicago" tz_abbr="CT"]

// Custom date format
[time_greeting display="date" date_format="l, F j, Y"]
```

### Page Builder Integration

For Bricks Builder and similar page builders:

```php
<?php time_greeting_echo(); ?>
```

### Theme Integration

Developers can integrate directly into theme files:

```php
<?php
if (function_exists('time_greeting_echo')) {
    time_greeting_echo(array(
        'display' => 'both',
        'timezone' => 'America/New_York',
        'tz_abbr' => 'ET'
    ));
}
?>
```

## Configuration

### Time Periods

Configure when different greetings appear in **Settings > Time Greeting**:

- **Morning**: Default starts at 5:00 AM
- **Afternoon**: Default starts at 12:00 PM  
- **Evening**: Default starts at 5:00 PM
- **Night**: Default starts at 10:00 PM

### Default Settings

- **Default Timezone**: Set site-wide timezone for all greetings
- **Timezone Abbreviation**: Default abbreviation (e.g., "ET", "PT")
- **Night Message**: Custom message with `{time}` and `{tz}` placeholders

### Tabbed Admin Interface

The settings page includes two tabs:

- **Settings**: Configure time periods and defaults
- **Styling & CSS**: Comprehensive customization guide with examples

## Customization

### CSS Variables

The plugin uses CSS custom properties for easy customization:

```css
.wp-block-time-greeting-block-time-greeting {
    --tgb-greeting-font-weight: 500;
    --tgb-date-font-style: normal;
    --tgb-date-opacity: 1;
    --tgb-separator-content: " ";
    --tgb-background-padding: 1em;
}
```

### Common Customizations

**Make date text italic:**
```css
.wp-block-time-greeting-block-time-greeting {
    --tgb-date-font-style: italic;
}
```

**Bold greeting text:**
```css
.wp-block-time-greeting-block-time-greeting {
    --tgb-greeting-font-weight: 700;
}
```

**Custom separator:**
```css
.wp-block-time-greeting-block-time-greeting {
    --tgb-separator-content: " • ";
}
```

### Where to Add CSS

1. **WordPress Customizer**: Go to Appearance > Customize > Additional CSS
2. **Child Theme**: Add to your child theme's `style.css`
3. **Plugin**: Create a simple plugin with `wp_add_inline_style()`

## Screenshots

*Screenshots will be added to demonstrate:*
- Gutenberg block in the editor
- Block configuration options
- Frontend greeting display variations
- Admin settings page
- Styling customization tab

## Directory Structure

```
time-greeting-block/
├── assets/
│   ├── block-editor.js      # Gutenberg block JavaScript
│   ├── block-editor.css     # Editor styles
│   └── block-style.css      # Frontend styles
├── languages/               # Translation files
├── block.json              # Block configuration
├── time-greeting-block.php # Main plugin file
└── README.md               # This file
```

## Requirements

- **WordPress**: 6.0 or higher
- **PHP**: 7.4 or higher
- **Browser**: Modern browsers with CSS custom properties support

## Browser Support

- Chrome 49+
- Firefox 31+
- Safari 9.1+
- Edge 16+

## API Reference

### Shortcode Parameters

| Parameter | Type | Default | Description |
|-----------|------|---------|-------------|
| `display` | string | `greeting` | What to show: `greeting`, `date`, `both` |
| `date_format` | string | `F j, Y` | PHP date format string |
| `timezone` | string | Site default | PHP timezone identifier |
| `tz_abbr` | string | Site default | Timezone abbreviation |

### PHP Functions

**`time_greeting_echo($atts)`**
- Echoes greeting directly
- `$atts`: Array of shortcode-style parameters

## Contributing

We welcome contributions! Please read our contributing guidelines:

1. **Fork** the repository
2. **Create** a feature branch (`git checkout -b feature/amazing-feature`)
3. **Commit** your changes (`git commit -m 'Add amazing feature'`)
4. **Push** to the branch (`git push origin feature/amazing-feature`)
5. **Open** a Pull Request

### Development Setup

```bash
# Clone the repository
git clone https://github.com/your-username/time-greeting-block.git

# The plugin is ready to use - no build process required
# Just activate in WordPress admin
```

## Changelog

### Version 1.0.3
- Updated to WordPress Block API v3
- Added CSS custom properties for easier customization
- Removed italic styling from date text by default
- Improved timezone handling with DateTime objects
- Enhanced admin interface with tabbed layout
- Added comprehensive styling documentation

### Version 1.0.2
- Fixed Gutenberg compatibility issues
- Added server-side rendering for better performance
- Improved accessibility with semantic HTML

### Version 1.0.1
- Initial public release
- Basic time greeting functionality
- Shortcode support

## Security

### Reporting Security Issues

Please report security vulnerabilities by emailing [security@yourwebsite.com]. Do not create public GitHub issues for security problems.

### Security Features

- Input sanitization on all user data
- Nonce protection on admin forms
- Capability checks for admin functions
- XSS prevention with proper escaping

## Support

- **Documentation**: See the [plugin settings page] for comprehensive guides
- **Issues**: Report bugs on [GitHub Issues]
- **WordPress Support**: Post in [WordPress.org forums]
- **Feature Requests**: Submit via [GitHub Issues] with the `enhancement` label

## License

This project is licensed under the GPL v2 or later - see the [LICENSE](LICENSE) file for details.

## Credits

- **Author**: Stephen Walker
- **Website**: [flyingw.co](https://flyingw.co)
- **Plugin URI**: [https://yourwebsite.com/time-greeting-block]

## Acknowledgments

- WordPress core team for the excellent Block API
- Contributors who have helped improve the plugin
- The WordPress community for feedback and support

---

**Made with ❤️ for the WordPress community**